@page "/departments"
@rendermode InteractiveServer
@using BlazorApp1.Components.Models
@using BlazorApp1.Components.Services
@inject NavigationManager NavigationManager
@inject IDepartmentService DepartmentService
@inject ILogger<Departments> Logger

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3>Departments</h3>
        <button class="btn btn-primary" @onclick="NavigateToNewDepartment">
            <span class="bi bi-plus-square"></span> Add New Department
        </button>
    </div>

    <table class="table table-hover table-sm table-bordered table-striped">
        <thead>
            <tr>
                <th style="width: 50px;">#</th>
                <th>Department No</th>
                <th>Department Name</th>
                <th>Company No</th>
                <th>Branch No</th>
                <th style="width: 100px">Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                int rowNumber = 1;
            }
            @foreach (var department in departments)
            {
                <tr>
                    <td>@(rowNumber++)</td>
                    <td>@department.Department_No</td>
                    <td>@department.Department_name</td>
                    <td>@department.Company_No</td>
                    <td>@department.Clinic_Branch_No</td>
                    <td>
                        <button class="btn btn-sm btn-primary" @onclick="() => EditDepartment(department.Department_No)"
                            title="Edit Department">
                            <span class="bi bi-pencil-square"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<DepartmentModel> departments = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            departments = await DepartmentService.GetAllDepartmentsAsync();
            Logger.LogInformation($"Loaded {departments.Count} departments");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to load departments");
        }
    }

    private void NavigateToNewDepartment()
    {
        try
        {
            Logger.LogInformation("Navigating to new department form");
            NavigationManager.NavigateTo("department-info");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to navigate to department form");
        }
    }

    private void EditDepartment(string id)
    {
        NavigationManager.NavigateTo($"department-info/{id}");
    }
}
